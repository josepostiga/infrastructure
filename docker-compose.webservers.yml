version: "3.8"

services:
  caddy:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.my-router.entrypoints=http"
      - "traefik.http.routers.my-router.rule=Host(`my-project.test`)"
    image: caddy:2-alpine
    expose:
      - 80
      - 443
    volumes:
      - ./.docker/server/Caddyfile:/etc/caddy/Caddyfile:ro
      - .:/var/www/html:delegated
    restart: unless-stopped
    networks:
      - web

  nginx:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.my-router.entrypoints=http"
      - "traefik.http.routers.my-router.rule=Host(`my-project.test`)"
    image: nginx:1-alpine
    expose:
      - 80
      - 443
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/server/conf.d:/etc/nginx/conf.d:ro
      - .:/var/www/html:delegated
    restart: unless-stopped
    networks:
      - web

  traefik:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=http"
      - "traefik.http.routers.api.rule=Host(`traefik.test`)"
      - "traefik.http.routers.api.service=api@internal"
    image: traefik:v2.6
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/configuration:/configuration:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
    restart: unless-stopped
    networks:
      - web

networks:
  web:
    external: true
